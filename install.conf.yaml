---

- clean: ['~']

- shell:
  - [git submodule update --init --recursive, Installing submodules]

- link:
    # Terminal:
    ~/.shell:
      path: shell
      create: true
    ~/.shell_env: config/shell_env
    ~/.bash_profile: config/bash_profile
    ~/.bashrc: config/bashrc
    ~/.zshrc: config/zshrc
    ~/.hushlogin: config/hushlogin
    ~/.antibody: config/antibody.txt
    ~/.hyper.js: config/hyper.js

    # Git:
    ~/.gitconfig: config/gitconfig
    ~/.gitignore_global: config/gitignore
    ~/.gitattributes_global: config/gitattributes

    # Tools:
    ~/.psqlrc: config/psqlrc
    ~/.sqliterc: config/sqliterc

    # Editors:
    ~/.editorconfig: config/editorconfig
    ~/.nanorc: config/nanorc


# Setting up vscode:
- shell:
  - command: sh './vscode/codespaces.sh'
    description: Setting up codespaces
    stdout: true
    stderr: true

- link:
    # macos:
    "~/Library/Application Support/Code/User/settings.json":
      if: '[ `uname` = Darwin ]'
      path: vscode/settings.json
      create: true
    "~/Library/Application Support/Code/User/keybindings.json":
      if: '[ `uname` = Darwin ]'
      path: vscode/keybindings.json
      create: true
    "~/Library/Application Support/Code/User/snippets":
      if: '[ `uname` = Darwin ]'
      path: vscode/snippets
      create: true

    # codespaces:
    "~/.vscode-remote/data/Machine/settings.json":
      if: '[ "$CODESPACES" = true ]'
      path: vscode/settings.json
      create: true
    "~/.vscode-remote/data/Machine/keybindings.json":
      if: '[ "$CODESPACES" = true ]'
      path: vscode/keybindings.json
      create: true
    "~/.vscode-remote/data/Machine/snippets":
      if: '[ "$CODESPACES" = true ]'
      path: vscode/snippets
      create: true

- shell:
  - command: sh './vscode/install.sh'
    description: Installing vscode extensions
    stdout: true
    stderr: true


# Installing dependencies:
- brewfile:
    file: Brewfile
    no-upgrage: true
    include: ['tap', 'brew']

# These links require deps to be installed:
- link:
    # SSH:
    ~/.ssh/config:
      path: config/ssh_config
      force: true
      create: true

    # GPG:
    ~/.gnupg/gpg-agent.conf:
      path: config/gpgagent
      force: true
      create: true


# Cleaning up:
- shell:
  - [brew cleanup, Cleaning up]
